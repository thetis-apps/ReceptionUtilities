AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Utilities for reception of items

# Metadata to use for the publishing to the SAR
Metadata:
  AWS::ServerlessRepo::Application:
    Name: thetis-ims-reception-utilities
    Description: Utility functions triggered by the reception of items
    Author: thetis-apps
    SpdxLicenseId: Apache-2.0
    LicenseUrl: LICENSE.txt
    ReadmeUrl: README.md
    Labels: ['thetis-ims']
    HomePageUrl: https://github.com/thetis-apps/ReceptionUtilities
    SemanticVersion: 1.0.3
    SourceCodeUrl: https://github.com/thetis-apps/ReceptionUtilities  
  
# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 30
    Runtime: nodejs16.x

# Parameters of the application 
Parameters:
  ContextId:
    Type: String
    Description: Context that this application is handling events for.
    MinLength: '1'
  ClientId:
    Type: AWS::SSM::Parameter::Value<String>
    Default: ThetisClientId
  ClientSecret:
    Type: AWS::SSM::Parameter::Value<String>
    Default: ThetisClientSecret
  ApiKey:
    Type: String
  DevOpsEmail:
    Description: The email address to send mail to when messages in the dead letter queue.
    Type: String
    MinLength: 4

Resources:

  Handler:
    Type: AWS::Serverless::Function
    Properties:
      Description: Function that runs when physical stock changes as a result of a reception
      Handler: src/handler.handle
      Environment:
        Variables:
          ClientId:
            Ref: ClientId
          ClientSecret:
            Ref: ClientSecret
          ApiKey:
            Ref: ApiKey
      Events:
        Request:
          Type: EventBridgeRule
          Properties:
            Pattern:
              source:
              - public.thetis-ims.com
              detail-type:
              - physicalStockChanged
              detail:
                transactionType:
                - RECEPTION
                contextId:
                - Ref: ContextId
      MemorySize: 128
      Timeout: 100
      DeadLetterQueue:
        Type: SQS
        TargetArn:
          Fn::GetAtt:
          - DeadLetterQueue
          - Arn
          
  # Our standard monitoring setup      
  DeadLetterQueue:
    Type: AWS::SQS::Queue
    Properties: 
      KmsMasterKeyId: alias/aws/sqs
